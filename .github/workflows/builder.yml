name: Build, and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Send Notification (Pipeline Start)
        env:
          API_URL: ${{ secrets.API_URL }}
          API_SECRET: ${{ secrets.API_SECRET }}
          API_KEY: HELLOWORLD
          NUMBER_NOTIFICATION: ${{ secrets.NUMBER_NOTIFICATION }}
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          LAST_COMMIT=$(git log -1 --pretty=format:"%s")
          AUTHOR=$(git log -1 --pretty=format:"%ae")
          COMMIT_HASH=$(git log -1 --pretty=format:"%H")
          JOB_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          TEXT=$(printf "üöÄ *Pipeline Started!*\nüîñ *Branch:* %s\nüìù *Commit:* %s\nüë§ *Author:* %s\nüîó [View Job](%s)" "$BRANCH" "$LAST_COMMIT" "$AUTHOR" "$JOB_URL")

          curl -X POST $API_URL \
            -H "x-api-secret: $API_SECRET" \
            -H "x-api-key: $API_KEY" \
            -F "text=$TEXT" \
            -F "number=$NUMBER_NOTIFICATION"

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: |
          set -e  # Pastikan pipeline berhenti jika ada error
          docker build -t ${{ secrets.DOCKER_USERNAME }}/pg-analytics:${{ github.run_number }}.17 .

      - name: Push the Docker image
        run: |
          set -e
          docker push ${{ secrets.DOCKER_USERNAME }}/pg-analytics:${{ github.run_number }}.17

          docker tag ${{ secrets.DOCKER_USERNAME }}/pg-analytics:${{ github.run_number }}.17 ${{ secrets.DOCKER_USERNAME }}/pg-analytics:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/pg-analytics:latest
          
      - name: Send Notification (Pipeline Result)
        if: always()  # Pastikan notifikasi ini selalu dikirim
        env:
          API_URL: ${{ secrets.API_URL }}
          API_SECRET: ${{ secrets.API_SECRET }}
          API_KEY: HELLOWORLD
          NUMBER_NOTIFICATION: ${{ secrets.NUMBER_NOTIFICATION }}
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          LAST_COMMIT=$(git log -1 --pretty=format:"%s")
          AUTHOR=$(git log -1 --pretty=format:"%ae")
          COMMIT_HASH=$(git log -1 --pretty=format:"%H")
          JOB_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          STATUS="${{ job.status }}"
  
          if [ "$STATUS" == "success" ]; then
            ICON="‚úÖ"
            MESSAGE="*Pipeline Succeeded!*"
          else
            ICON="‚ùå"
            MESSAGE="*Pipeline Failed!*"
          fi
  
          TEXT=$(printf "%s %s\nüîñ *Branch:* %s\nüìù *Commit:* %s\nüë§ *Author:* %s\nüîó [View Job](%s)" "$ICON" "$MESSAGE" "$BRANCH" "$LAST_COMMIT" "$AUTHOR" "$JOB_URL")
  
          curl -X POST $API_URL \
            -H "x-api-secret: $API_SECRET" \
            -H "x-api-key: $API_KEY" \
            -F "text=$TEXT" \
            -F "number=$NUMBER_NOTIFICATION"